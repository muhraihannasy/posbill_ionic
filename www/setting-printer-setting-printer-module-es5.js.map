{"version":3,"sources":["webpack:///src/app/setting-printer/setting-printer-routing.module.ts","webpack:///src/app/setting-printer/setting-printer.page.scss","webpack:///src/app/setting-printer/setting-printer.module.ts","webpack:///src/app/setting-printer/setting-printer.page.ts","webpack:///src/app/setting-printer/setting-printer.page.html"],"names":["routes","path","component","SettingPrinterPageRoutingModule","imports","forChild","exports","SettingPrinterPageModule","declarations","SettingPrinterPage","storage","http","global","router","loadingController","platform","nativePageTransitions","bluetoothSerial","deviceChoose","device2Choose","company","name","getObject","then","data","device","printer","dataPrinter","address","printer2","dataPrinter2","list","success","setObject","error","console","log","toastPresent","navigate","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,+BAA+B;AAAA;AAAA,Q;;AAA/BA,qCAA+B,6DAJ3C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI2C,GAA/BH,+BAA+B,CAA/B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFI,wBAAwB;AAAA;AAAA,Q;;AAAxBA,8BAAwB,6DATpC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,+FAJO,CADD;AAORI,oBAAY,EAAE,CAAC,wEAAD;AAPN,OAAT,CASoC,GAAxBD,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJAE,kBAAkB;AAO7B,oCACUC,OADV,EAEUC,IAFV,EAGSC,MAHT,EAIUC,MAJV,EAKUC,iBALV,EAMUC,QANV,EAOUC,qBAPV,EAQUC,eARV,EAQ0C;AAAA;;AAPhC,eAAAP,OAAA,GAAAA,OAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAZV,eAAAC,YAAA,GAAoB,EAApB;AACA,eAAAC,aAAA,GAAqB,EAArB;AACA,eAAAC,OAAA,GAAe;AAACC,gBAAI,EAAC,EAAN;AAAS,uBAAQ;AAAjB,WAAf,CAU0C,CAExC;AACA;AACA;AACD;;AApB4B;AAAA;AAAA,iBAsB7B,oBAAW,CACV;AAvB4B;AAAA;AAAA,iBAyB7B,4BAAgB;AAAA;;AAEd,iBAAKX,OAAL,CAAaY,SAAb,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,UAACC,IAAD,EAAU;AAE/C,kBAAGA,IAAI,IAAI,IAAX,EACA;AACE,qBAAI,CAACC,MAAL,GAAcD,IAAd;;AACA,qBAAI,CAACd,OAAL,CAAaY,SAAb,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,UAACG,OAAD,EAAa;AAClD,sBAAGA,OAAO,IAAI,IAAd,EACA;AACE,wBAAIC,WAAW,GAAQD,OAAvB;AACA,yBAAI,CAACR,YAAL,GAAoBS,WAAW,CAACC,OAAhC;AACD;AAEF,iBAPD;AAQD;AACF,aAdD;AAgBA,iBAAKlB,OAAL,CAAaY,SAAb,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,UAACC,IAAD,EAAU;AAE/C,kBAAGA,IAAI,IAAI,IAAX,EACA;AACE,qBAAI,CAACC,MAAL,GAAcD,IAAd;;AACA,qBAAI,CAACd,OAAL,CAAaY,SAAb,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,UAACG,OAAD,EAAa;AAClD,sBAAGA,OAAO,IAAI,IAAd,EACA;AACE,wBAAIC,WAAW,GAAQD,OAAvB;AACA,yBAAI,CAACR,YAAL,GAAoBS,WAAW,CAACC,OAAhC;AACD;AAEF,iBAPD;AAQD;;AAED,kBAAGJ,IAAI,IAAI,IAAX,EACA;AACE,qBAAI,CAACC,MAAL,GAAcD,IAAd;;AACA,qBAAI,CAACd,OAAL,CAAaY,SAAb,CAAuB,UAAvB,EAAmCC,IAAnC,CAAwC,UAACM,QAAD,EAAc;AACpD,sBAAGA,QAAQ,IAAI,IAAf,EACA;AACE,wBAAIC,YAAY,GAAQD,QAAxB;AACA,yBAAI,CAACV,aAAL,GAAqBW,YAAY,CAACF,OAAlC;AACD;AAEF,iBAPD;AAQD;AACF,aA3BD;AA6BA,iBAAKlB,OAAL,CAAaY,SAAb,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,UAACH,OAAD,EAAiB;AACtD,mBAAI,CAACA,OAAL,GAAeA,OAAf;AACD,aAFD;AAGD;AA3E4B;AAAA;AAAA,iBA6E7B,gBAAI;AAAA;;AAEF,iBAAKH,eAAL,CAAqBc,IAArB,GAA4BR,IAA5B,CAAiC,UAAAS,OAAO,EAAI;AAC1C,oBAAI,CAACP,MAAL,GAAcO,OAAd;;AACA,oBAAI,CAACtB,OAAL,CAAauB,SAAb,CAAuB,SAAvB,EAAiC,MAAI,CAACR,MAAtC;AACD,aAHD,EAIE,UAAAS,KAAK,EAAI;AACTC,qBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAND;AAOD;AAtF4B;AAAA;AAAA,iBAwF7B,mBAAO;AAEL,gBAAG,KAAKhB,YAAL,IAAqB,EAAxB,EACA;AACE,mBAAKN,MAAL,CAAYyB,YAAZ,CAAyB,8BAAzB;AACA,qBAAO,KAAP;AACD;;AACD,iBAAK3B,OAAL,CAAauB,SAAb,CAAuB,SAAvB,EAAiC;AAACL,qBAAO,EAAC,KAAKV;AAAd,aAAjC;AACA,iBAAKR,OAAL,CAAauB,SAAb,CAAuB,UAAvB,EAAkC;AAACL,qBAAO,EAAC,KAAKT;AAAd,aAAlC;AACA,iBAAKP,MAAL,CAAYyB,YAAZ,CAAyB,wBAAzB;AACA,iBAAKxB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACAH,mBAAO,CAACC,GAAR,CAAY,KAAKlB,YAAjB;AACD;AApG4B;;AAAA;AAAA,S;;;;gBAdtB;;gBACA;;gBACA;;gBACA;;gBACA;;gBAAmB;;gBAEnB;;gBACA;;;;AAOIT,wBAAkB,6DAL9B,gEAAU;AACT8B,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK8B,GAAlB/B,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA","file":"setting-printer-setting-printer-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingPrinterPage } from './setting-printer.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingPrinterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingPrinterPageRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5nLXByaW50ZXIucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SettingPrinterPageRoutingModule } from './setting-printer-routing.module';\r\n\r\nimport { SettingPrinterPage } from './setting-printer.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SettingPrinterPageRoutingModule\r\n  ],\r\n  declarations: [SettingPrinterPage]\r\n})\r\nexport class SettingPrinterPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StorageService } from '../storage.service';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\r\nimport { GlobalService } from '../global.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController, Platform } from '@ionic/angular';\r\n\r\nimport { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions/ngx';\r\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\r\n\r\n@Component({\r\n  selector: 'app-setting-printer',\r\n  templateUrl: './setting-printer.page.html',\r\n  styleUrls: ['./setting-printer.page.scss'],\r\n})\r\nexport class SettingPrinterPage implements OnInit {\r\n\r\n  device: any;\r\n  deviceChoose: any = '';\r\n  device2Choose: any = '';\r\n  company: any = {name:'',package:''};\r\n\r\n  constructor(\r\n    private storage: StorageService,\r\n    private http: HttpClient,\r\n    public global: GlobalService,\r\n    private router:Router,\r\n    private loadingController: LoadingController,\r\n    private platform: Platform,\r\n    private nativePageTransitions: NativePageTransitions,\r\n    private bluetoothSerial: BluetoothSerial\r\n  ) {\r\n    // this.platform.backButton.subscribeWithPriority(10, () => {\r\n    //   this.router.navigate(['/tabs/tab4']);\r\n    // });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter()\r\n  {\r\n    this.storage.getObject('devices').then((data) => {\r\n\r\n      if(data != null)\r\n      {\r\n        this.device = data;\r\n        this.storage.getObject('printer').then((printer) => {\r\n          if(printer != null)\r\n          {\r\n            let dataPrinter: any = printer;\r\n            this.deviceChoose = dataPrinter.address;\r\n          }\r\n\r\n        });\r\n      }\r\n    });\r\n\r\n    this.storage.getObject('devices').then((data) => {\r\n\r\n      if(data != null)\r\n      {\r\n        this.device = data;\r\n        this.storage.getObject('printer').then((printer) => {\r\n          if(printer != null)\r\n          {\r\n            let dataPrinter: any = printer;\r\n            this.deviceChoose = dataPrinter.address;\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n      if(data != null)\r\n      {\r\n        this.device = data;\r\n        this.storage.getObject('printer2').then((printer2) => {\r\n          if(printer2 != null)\r\n          {\r\n            let dataPrinter2: any = printer2;\r\n            this.device2Choose = dataPrinter2.address;\r\n          }\r\n\r\n        });\r\n      }\r\n    });\r\n\r\n    this.storage.getObject('company').then((company:any) => {\r\n      this.company = company;\r\n    })\r\n  }\r\n\r\n  scan()\r\n  {\r\n    this.bluetoothSerial.list().then(success => {\r\n      this.device = success;\r\n      this.storage.setObject('devices',this.device);\r\n    },\r\n      error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  process()\r\n  {\r\n    if(this.deviceChoose == '')\r\n    {\r\n      this.global.toastPresent('Printer Kasir belum dipilih!');\r\n      return false;\r\n    }\r\n    this.storage.setObject('printer',{address:this.deviceChoose});\r\n    this.storage.setObject('printer2',{address:this.device2Choose});\r\n    this.global.toastPresent('Printer aktif dipilih!');\r\n    this.router.navigate(['/tabs/tab-setting']);\r\n    console.log(this.deviceChoose);\r\n  }\r\n\r\n}\r\n","export default \"<ion-header mode=\\\"ios\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button fill=\\\"link\\\" [routerLink]=\\\"['/setting/format-printer']\\\"><ion-icon name=\\\"arrow-back-outline\\\"></ion-icon></ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Printer</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content mode=\\\"ios\\\" class=\\\"ion-padding\\\">\\r\\n\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"light\\\" (click)=\\\"scan()\\\">Scan printer</ion-button>\\r\\n\\r\\n    <ion-item-divider>Printer Kasir (nota pelanggan)</ion-item-divider>\\r\\n    <ion-radio-group [(ngModel)]=\\\"deviceChoose\\\">\\r\\n      <ion-item *ngFor=\\\"let item of device\\\">\\r\\n        <ion-label>{{item.name}} <br/><small>{{item.address}}</small></ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"{{item.address}}\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-radio-group>\\r\\n\\r\\n    <ion-item-divider>Printer Order (nota order)</ion-item-divider>\\r\\n\\r\\n    <ion-radio-group [(ngModel)]=\\\"device2Choose\\\" *ngIf=\\\"company.package == 'Premium'\\\">\\r\\n      <ion-item *ngFor=\\\"let item of device\\\">\\r\\n        <ion-label>{{item.name}} <br/><small>{{item.address}}</small></ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"{{item.address}}\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-radio-group>\\r\\n\\r\\n    <p class=\\\"ion-text-center\\\" *ngIf=\\\"company.package == 'Lite'\\\">\\r\\n      <ion-text color=\\\"primary\\\">Printer order tersedia dalam versi premium</ion-text>\\r\\n    </p>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"ion-padding\\\" mode=\\\"ios\\\">\\r\\n    <ion-button expand=\\\"block\\\" (click)=\\\"process()\\\" [disabled]=\\\"deviceChoose == ''\\\">Simpan</ion-button>\\r\\n</ion-footer>\\r\\n\";"]}