{"version":3,"sources":["webpack:///src/app/report-sales/report-sales.page.html","webpack:///src/app/report-sales/report-sales.module.ts","webpack:///src/app/report-sales/report-sales.page.ts","webpack:///src/app/report-sales/report-sales-routing.module.ts","webpack:///src/app/report-sales/report-sales.page.scss"],"names":["ReportSalesPageModule","imports","declarations","ReportSalesPage","storage","http","global","router","loadingController","platform","route","nativePageTransitions","auth","token","totalGrossSales","totalDiscount","totalNetSales","totalServiceCharge","totalTax","totalCollected","totalCost","totalExpense","totalQty","totalMargin","outlet_id","start_date","end_date","totalTrx","company","name","min_date","params","subscribe","parsingDate","getFullYear2Ago","getMonth2Ago","getObject","then","getDataOutlet","reqHeader","options","headers","post","base_url","data","console","log","status","setObject","outlet","getDataSales","error","postData","total_gross_sales","total_discount","total_net_sales","total_service_charge","total_tax","total_collected","total_cost","total_margin","total_trx","total_qty","selector","template","routes","path","component","ReportSalesPageRoutingModule","forChild","exports"],"mappings":"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","file":"report-sales-report-sales-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\">\\r\\n  <ion-item lines=\\\"full\\\" color=\\\"light\\\">\\r\\n    <ion-label>Pilih outlet</ion-label>\\r\\n    <ion-select placeholder=\\\"Semua outlet\\\" interface=\\\"action-sheet\\\" [(ngModel)]=\\\"outlet_id\\\" (ionChange)=\\\"changeEvent()\\\">\\r\\n      <ion-select-option value=\\\"All\\\">Semua outlet</ion-select-option>\\r\\n      <ion-select-option *ngFor=\\\"let item of outlet\\\" value=\\\"{{item.outlet.id}}\\\">{{item.outlet.name}}</ion-select-option>\\r\\n    </ion-select>\\r\\n  </ion-item>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content mode=\\\"ios\\\">\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\" size-xs=\\\"6\\\" size-sm=\\\"5\\\" >\\r\\n        <ion-item lines=\\\"full\\\">\\r\\n          <ion-label class=\\\"ion-text-wrap\\\"><small>Dari</small></ion-label>\\r\\n          <ion-datetime *ngIf=\\\"company.package == 'Premium'\\\" style=\\\"font-size:12px;\\\" displayFormat=\\\"DD-MMM-YYYY\\\" pickerFormat=\\\"DD-MMM-YYYY\\\"  display-timezone=\\\"Asia/Jakarta\\\" color=\\\"primary\\\" [(ngModel)]=\\\"start_date\\\" (ionChange)=\\\"changeEvent()\\\"></ion-datetime>\\r\\n          <ion-datetime *ngIf=\\\"company.package == 'Lite'\\\" style=\\\"font-size:12px;\\\" displayFormat=\\\"DD-MMM-YYYY\\\" pickerFormat=\\\"DD-MMM-YYYY\\\"  display-timezone=\\\"Asia/Jakarta\\\" color=\\\"primary\\\" [(ngModel)]=\\\"start_date\\\" min=\\\"{{min_date}}\\\" (ionChange)=\\\"changeEvent()\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n\\r\\n      <ion-col size=\\\"6\\\" size-xs=\\\"6\\\" size-sm=\\\"5\\\">\\r\\n        <ion-item lines=\\\"full\\\">\\r\\n          <ion-label class=\\\"ion-text-wrap\\\"><small>Sampai</small></ion-label>\\r\\n          <ion-datetime style=\\\"font-size:12px;\\\" displayFormat=\\\"DD-MMM-YYYY\\\" pickerFormat=\\\"DD-MMM-YYYY\\\"  display-timezone=\\\"Asia/Jakarta\\\" color=\\\"primary\\\" [(ngModel)]=\\\"end_date\\\" min=\\\"{{start_date}}\\\" (ionChange)=\\\"changeEvent()\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n    </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <div style=\\\"margin-top:-25px;\\\">\\r\\n  <ion-card class=\\\"no-padding\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><strong><small>Penjualan kotor</small></strong></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><strong><small>{{global.currency(totalGrossSales)}}</small></strong></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><small>Diskon</small></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><small>({{global.currency(totalDiscount)}})</small></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><strong><small>Penjualan bersih</small></strong></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><strong><small>{{global.currency(totalNetSales)}}</small></strong></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><small>Service charge</small></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><small>{{global.currency(totalServiceCharge)}}</small></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><small>Pajak</small></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><small>{{global.currency(totalTax)}}</small></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label><small>Total uang diterima</small></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><small>{{global.currency(totalCollected)}}</small></ion-note>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card class=\\\"no-padding\\\" *ngIf=\\\"company.package == 'Premium'\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><strong><small>Penjualan bersih</small></strong></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><strong><small>{{global.currency(totalNetSales)}}</small></strong></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><small>Harga pokok penjualan</small></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><small>({{global.currency(totalCost)}})</small></ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"full\\\">\\r\\n        <ion-label><strong><small>Laba / rugi kotor</small></strong></ion-label>\\r\\n        <ion-note color=\\\"dark\\\"><strong><small>{{global.currency(totalMargin)}}</small></strong></ion-note>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReportSalesPageRoutingModule } from './report-sales-routing.module';\r\n\r\nimport { ReportSalesPage } from './report-sales.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReportSalesPageRoutingModule\r\n  ],\r\n  declarations: [ReportSalesPage]\r\n})\r\nexport class ReportSalesPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { StorageService } from '../storage.service';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\r\nimport { GlobalService } from '../global.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController, Platform } from '@ionic/angular';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions/ngx';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-report-sales',\r\n  templateUrl: './report-sales.page.html',\r\n  styleUrls: ['./report-sales.page.scss'],\r\n})\r\nexport class ReportSalesPage implements OnInit {\r\n\r\n  auth: any = {token:''};\r\n\r\n  totalGrossSales: any = 0;\r\n  totalDiscount: any = 0;\r\n  totalNetSales: any = 0;\r\n  totalServiceCharge: any = 0;\r\n  totalTax: any = 0;\r\n  totalCollected: any=0;\r\n  totalCost: any = 0;\r\n  totalExpense: any = 0;\r\n  totalQty: any = 0;\r\n  totalMargin: any = 0;\r\n  outlet: any;\r\n  outlet_id: any = 'All';\r\n  start_date: any = '';\r\n  end_date: any = '';\r\n  totalTrx: any =0;\r\n  company: any = {name: '',package: ''};\r\n  min_date: any = '';\r\n\r\n  constructor(\r\n    private storage: StorageService,\r\n    private http: HttpClient,\r\n    public global: GlobalService,\r\n    private router:Router,\r\n    private loadingController: LoadingController,\r\n    private platform: Platform,\r\n    private route: ActivatedRoute,\r\n    private nativePageTransitions: NativePageTransitions\r\n  ) {\r\n\r\n    this.route.params.subscribe((params: any) => {\r\n      if(params['start_date'])\r\n      {\r\n        this.start_date = params['start_date'];\r\n      }\r\n      if(params['end_date'])\r\n      {\r\n        this.end_date = params['end_date'];\r\n      }\r\n      if(params['outlet_id'])\r\n      {\r\n        this.outlet_id = params['outlet_id'];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.min_date = this.global.parsingDate(this.global.getFullYear2Ago()+'-'+this.global.getMonth2Ago()+'-01');\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n\r\n      this.storage.getObject('auth').then((auth) => {\r\n\r\n        this.auth = auth;\r\n        this.getDataOutlet();\r\n        // this.getDataSales();\r\n      });\r\n\r\n      this.storage.getObject('company').then((company:any) => {\r\n        this.company = company;\r\n      });\r\n  }\r\n\r\n  getDataOutlet()\r\n  {\r\n    var reqHeader = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+this.auth.token\r\n     });\r\n\r\n    let options = {headers: reqHeader};\r\n    this.http.post(this.global.base_url+'auth/outlet/list', null, options)\r\n       .subscribe((data: any) => {\r\n         console.log(data);\r\n\r\n         if(data.status == 0)\r\n         {\r\n           this.storage.setObject('outlet',data.outlet);\r\n           this.outlet = data.outlet;\r\n           this.getDataSales();\r\n\r\n           console.log(data);\r\n         }\r\n         else\r\n         {\r\n           console.log(data);\r\n         }\r\n\r\n\r\n        }, error => {\r\n\r\n         console.log(error);\r\n    });\r\n  }\r\n\r\n  changeEvent()\r\n  {\r\n    this.getDataSales();\r\n  }\r\n\r\n  getDataSales()\r\n  {\r\n    this.storage.getObject('auth').then((auth: any) => {\r\n\r\n      var reqHeader = new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+auth.token\r\n       });\r\n\r\n      let options = {headers: reqHeader};\r\n\r\n      let postData = {\r\n                  outlet_id: this.outlet_id,\r\n                  start_date: this.global.parsingDate(this.start_date),\r\n                  end_date: this.global.parsingDate(this.end_date)\r\n                };\r\n\r\n      this.http.post(this.global.base_url+'auth/report/sales_summary', postData, options)\r\n         .subscribe((data: any) => {\r\n           console.log(data);\r\n\r\n           if(data.status == 0)\r\n           {\r\n             this.totalGrossSales = data.total_gross_sales;\r\n             this.totalDiscount = data.total_discount;\r\n             this.totalNetSales = data.total_net_sales;\r\n             this.totalServiceCharge = data.total_service_charge;\r\n             this.totalTax = data.total_tax;\r\n             this.totalCollected = data.total_collected;\r\n             this.totalCost = data.total_cost;\r\n             this.totalMargin = data.total_margin;\r\n             this.totalTrx = data.total_trx;\r\n             this.totalQty = data.total_qty;\r\n             console.log(data);\r\n           }\r\n           else\r\n           {\r\n             console.log(data);\r\n           }\r\n\r\n\r\n          }, error => {\r\n\r\n           console.log(error);\r\n\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReportSalesPage } from './report-sales.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportSalesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReportSalesPageRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXBvcnQtc2FsZXMucGFnZS5zY3NzIn0= */\";"]}