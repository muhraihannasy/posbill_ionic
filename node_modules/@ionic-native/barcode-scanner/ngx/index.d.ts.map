{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport interface BarcodeScannerOptions {\n    /**\n     * Prefer front camera. Supported on iOS and Android.\n     */\n    preferFrontCamera?: boolean;\n    /**\n     * Show flip camera button. Supported on iOS and Android.\n     */\n    showFlipCameraButton?: boolean;\n    /**\n     * Show torch button. Supported on iOS and Android.\n     */\n    showTorchButton?: boolean;\n    /**\n     * Disable animations. Supported on iOS only.\n     */\n    disableAnimations?: boolean;\n    /**\n     * Disable success beep. Supported on iOS only.\n     */\n    disableSuccessBeep?: boolean;\n    /**\n     * Prompt text. Supported on Android only.\n     */\n    prompt?: string;\n    /**\n     * Formats separated by commas. Defaults to all formats except `PDF_417` and `RSS_EXPANDED`.\n     */\n    formats?: string;\n    /**\n     * Orientation. Supported on Android only. Can be set to `portrait` or `landscape`. Defaults to none so the user can rotate the phone and pick an orientation.\n     */\n    orientation?: string;\n    /**\n     * Launch with the torch switched on (if available). Supported on Android only.\n     */\n    torchOn?: boolean;\n    /**\n     * Save scan history. Defaults to `false`. Supported on Android only.\n     */\n    saveHistory?: boolean;\n    /**\n     * Display scanned text for X ms. 0 suppresses it entirely, default 1500. Supported on Android only.\n     */\n    resultDisplayDuration?: number;\n}\nexport interface BarcodeScanResult {\n    format: 'QR_CODE' | 'DATA_MATRIX' | 'UPC_E' | 'UPC_A' | 'EAN_8' | 'EAN_13' | 'CODE_128' | 'CODE_39' | 'CODE_93' | 'CODABAR' | 'ITF' | 'RSS14' | 'RSS_EXPANDED' | 'PDF_417' | 'AZTEC' | 'MSI';\n    cancelled: boolean;\n    text: string;\n}\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then(barcodeData => {\n *  console.log('Barcode data', barcodeData);\n * }).catch(err => {\n * \tconsole.log('Error', err);\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nexport declare class BarcodeScanner extends IonicNativePlugin {\n    Encode: {\n        TEXT_TYPE: string;\n        EMAIL_TYPE: string;\n        PHONE_TYPE: string;\n        SMS_TYPE: string;\n    };\n    /**\n     * Open the barcode scanner.\n     * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    scan(options?: BarcodeScannerOptions): Promise<BarcodeScanResult>;\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param {string} type Type of encoding\n     * @param {any} data Data to encode\n     * @returns {Promise<any>}\n     */\n    encode(type: string, data: any): Promise<any>;\n}\n"]}