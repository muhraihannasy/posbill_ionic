{"version":3,"file":"google-chart.component.d.ts","sources":["google-chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, EventEmitter } from '@angular/core';\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\nimport { GoogleChartsDataTable, GoogleChartsDataTableInterface } from '../google-charts-datatable';\nimport { ChartReadyEvent } from './chart-ready-event';\nimport { ChartErrorEvent } from './chart-error-event';\nimport { ChartSelectEvent } from './chart-select-event';\nimport { ChartMouseOverEvent, ChartMouseOutEvent } from './chart-mouse-event';\nimport { RegionClickEvent } from './geochart-events';\nexport interface GoogleChartInterface extends GoogleChartsDataTableInterface {\n    chartType: string | GoogleChartType;\n    options?: any;\n    component?: GoogleChartComponent;\n}\nexport declare enum GoogleChartType {\n    AnnotationChart = \"AnnotationChart\",\n    AreaChart = \"AreaChart\",\n    BarChart = \"BarChart\",\n    BubbleChart = \"BubbleChart\",\n    Calendar = \"Calendar\",\n    CandlestickChart = \"CandlestickChart\",\n    ColumnChart = \"ColumnChart\",\n    ComboChart = \"ComboChart\",\n    Gantt = \"Gantt\",\n    Gauge = \"Gauge\",\n    GeoChart = \"GeoChart\",\n    Histogram = \"Histogram\",\n    LineChart = \"LineChart\",\n    Map = \"Map\",\n    OrgChart = \"OrgChart\",\n    PieChart = \"PieChart\",\n    Sankey = \"Sankey\",\n    ScatterChart = \"ScatterChart\",\n    SteppedAreaChart = \"SteppedAreaChart\",\n    Table = \"Table\",\n    Timeline = \"Timeline\",\n    TreeMap = \"TreeMap\",\n    WordTree = \"WordTree\"\n}\nexport declare class GoogleChartComponent implements OnInit {\n    private el;\n    private loaderService;\n    data: GoogleChartInterface;\n    chartReady: EventEmitter<ChartReadyEvent>;\n    chartReadyOneTime: EventEmitter<ChartReadyEvent>;\n    chartError: EventEmitter<ChartErrorEvent>;\n    chartErrorOneTime: EventEmitter<ChartErrorEvent>;\n    chartSelect: EventEmitter<ChartSelectEvent>;\n    chartSelectOneTime: EventEmitter<ChartSelectEvent>;\n    mouseOver: EventEmitter<ChartMouseOverEvent>;\n    mouseOverOneTime: EventEmitter<ChartMouseOverEvent>;\n    mouseOut: EventEmitter<ChartMouseOutEvent>;\n    mouseOutOneTime: EventEmitter<ChartMouseOutEvent>;\n    regionClick: EventEmitter<RegionClickEvent>;\n    regionClickOneTime: EventEmitter<RegionClickEvent>;\n    wrapper: any;\n    private cli;\n    private options;\n    private HTMLel;\n    private dataTable;\n    constructor(el: ElementRef, loaderService: GoogleChartsLoaderService);\n    ngOnInit(): void;\n    init(): Promise<void>;\n    private recreateWrapper;\n    private _draw;\n    getDataTable(): GoogleChartsDataTable;\n    draw(value?: GoogleChartInterface): void;\n    private getSelectorBySeriesType;\n    /**\n     * Given a column number, counts how many\n     * columns have rol==\"data\". Those are mapped\n     * one-to-one to the series array. When rol is not defined\n     * a column of type number means a series column.\n     * @param column to inspect\n     */\n    private getSeriesByColumn;\n    private getBoundingBoxForItem;\n    private getValueAtPosition;\n    private getColumnTypeAtPosition;\n    private getColumnLabelAtPosition;\n    private getHTMLTooltip;\n    private parseMouseEvent;\n    private registerChartEvents;\n    private registerChartWrapperEvents;\n    private addListener;\n    private addOneTimeListener;\n    private selectListener;\n    private convertOptions;\n}\n"]}