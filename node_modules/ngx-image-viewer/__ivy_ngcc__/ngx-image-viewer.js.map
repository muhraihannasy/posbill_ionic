{"version":3,"file":"ngx-image-viewer.js","sources":["ts/src/app/image-viewer/image-viewer-config.model.ts","ts/src/app/image-viewer/image-viewer.component.ts","ts/src/app/image-viewer/fullscreen.directive.ts","ts/src/app/image-viewer/image-viewer.module.ts","ts/ngx-image-viewer.ts"],"names":["screenfull.enabled","screenfull.request","screenfull.exit"],"mappings":"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","sourcesContent":["export interface ImageViewerConfig {\n    btnClass?: string;\n    zoomFactor?: number;\n    containerBackgroundColor?: string;\n    wheelZoom?: boolean;\n    allowFullscreen?: boolean;\n    allowKeyboardNavigation?: boolean;\n\n    btnShow?: {\n      zoomIn?: boolean;\n      zoomOut?: boolean;\n      rotateClockwise?: boolean;\n      rotateCounterClockwise?: boolean;\n      next?: boolean;\n      prev?: boolean;\n    };\n\n    btnIcons?: {\n        zoomIn?: string;\n        zoomOut?: string;\n        rotateClockwise?: string;\n        rotateCounterClockwise?: string;\n        next?: string;\n        prev?: string;\n        fullscreen?: string;\n    };\n\n    customBtns?: Array<\n      {\n        name: string;\n        icon: string;\n      }\n    >;\n}\nexport class CustomEvent {\n  name: string;\n  imageIndex: number;\n/**\n * @param {?} name\n * @param {?} imageIndex\n */\nconstructor(name, imageIndex) {\n    this.name = name;\n    this.imageIndex = imageIndex;\n  }\n}\n\nfunction CustomEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomEvent.prototype.name;\n/** @type {?} */\nCustomEvent.prototype.imageIndex;\n}\n","import {Component, OnInit, Input, Optional, Inject, Output, EventEmitter, HostListener} from '@angular/core';\nimport { ImageViewerConfig, CustomEvent } from './image-viewer-config.model';\n\nconst /** @type {?} */ DEFAULT_CONFIG: ImageViewerConfig = {\n  btnClass: 'default',\n  zoomFactor: 0.1,\n  containerBackgroundColor: '#ccc',\n  wheelZoom: false,\n  allowFullscreen: true,\n  allowKeyboardNavigation: true,\n  btnShow: {\n    zoomIn: true,\n    zoomOut: true,\n    rotateClockwise: true,\n    rotateCounterClockwise: true,\n    next: true,\n    prev: true\n  },\n  btnIcons: {\n    zoomIn: 'fa fa-plus',\n    zoomOut: 'fa fa-minus',\n    rotateClockwise: 'fa fa-repeat',\n    rotateCounterClockwise: 'fa fa-undo',\n    next: 'fa fa-arrow-right',\n    prev: 'fa fa-arrow-left',\n    fullscreen: 'fa fa-arrows-alt',\n  }\n};\nexport class ImageViewerComponent implements OnInit {\n\n  \n  src: string[];\n\n  \n  index = 0;\n\n  \n  config: ImageViewerConfig;\n\n  \n  indexChange: EventEmitter<number> = new EventEmitter();\n\n  \n  configChange: EventEmitter<ImageViewerConfig> = new EventEmitter();\n\n  \n  customEvent: EventEmitter<CustomEvent> = new EventEmitter();\npublic style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };\npublic fullscreen = false;\npublic loading = true;\nprivate scale = 1;\nprivate rotation = 0;\nprivate translateX = 0;\nprivate translateY = 0;\nprivate prevX: number;\nprivate prevY: number;\nprivate hovered = false;\n/**\n * @param {?} moduleConfig\n */\nconstructor(\npublic moduleConfig: ImageViewerConfig) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    const /** @type {?} */ merged = this.mergeConfig(DEFAULT_CONFIG, this.moduleConfig);\n    this.config = this.mergeConfig(merged, this.config);\n    this.triggerConfigBinding();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nnextImage(event) {\n    if (this.canNavigate(event) && this.index < this.src.length - 1) {\n      this.loading = true;\n      this.index++;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprevImage(event) {\n    if (this.canNavigate(event) && this.index > 0) {\n      this.loading = true;\n      this.index--;\n      this.triggerIndexBinding();\n      this.reset();\n    }\n  }\n/**\n * @return {?}\n */\nzoomIn() {\n    this.scale *= (1 + this.config.zoomFactor);\n    this.updateStyle();\n  }\n/**\n * @return {?}\n */\nzoomOut() {\n    if (this.scale > this.config.zoomFactor) {\n      this.scale /= (1 + this.config.zoomFactor);\n    }\n    this.updateStyle();\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nscrollZoom(evt) {\n    if (this.config.wheelZoom) {\n      evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();\n      return false;\n    }\n  }\n/**\n * @return {?}\n */\nrotateClockwise() {\n    this.rotation += 90;\n    this.updateStyle();\n  }\n/**\n * @return {?}\n */\nrotateCounterClockwise() {\n    this.rotation -= 90;\n    this.updateStyle();\n  }\n/**\n * @return {?}\n */\nonLoad() {\n    this.loading = false;\n  }\n/**\n * @return {?}\n */\nonLoadStart() {\n    this.loading = true;\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nonDragOver(evt) {\n    this.translateX += (evt.clientX - this.prevX);\n    this.translateY += (evt.clientY - this.prevY);\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n    this.updateStyle();\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nonDragStart(evt) {\n    if (evt.dataTransfer && evt.dataTransfer.setDragImage) {\n      evt.dataTransfer.setDragImage(evt.target.nextElementSibling, 0, 0);\n    }\n    this.prevX = evt.clientX;\n    this.prevY = evt.clientY;\n  }\n/**\n * @return {?}\n */\ntoggleFullscreen() {\n    this.fullscreen = !this.fullscreen;\n    if (!this.fullscreen) {\n      this.reset();\n    }\n  }\n/**\n * @return {?}\n */\ntriggerIndexBinding() {\n    this.indexChange.emit(this.index);\n  }\n/**\n * @return {?}\n */\ntriggerConfigBinding() {\n    this.configChange.next(this.config);\n  }\n/**\n * @param {?} name\n * @param {?} imageIndex\n * @return {?}\n */\nfireCustomEvent(name, imageIndex) {\n    this.customEvent.emit(new CustomEvent(name, imageIndex));\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.translateX = 0;\n    this.translateY = 0;\n    this.updateStyle();\n  }\n/**\n * @return {?}\n */\nprivate onMouseOver() {\n    this.hovered = true;\n  }\n/**\n * @return {?}\n */\nprivate onMouseLeave() {\n    this.hovered = false;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate canNavigate(event: any) {\n    return event == null ||  (this.config.allowKeyboardNavigation && this.hovered);\n  }\n/**\n * @return {?}\n */\nprivate updateStyle() {\n    this.style.transform = `translate(${this.translateX}px, ${this.translateY}px) rotate(${this.rotation}deg) scale(${this.scale})`;\n    this.style.msTransform = this.style.transform;\n    this.style.webkitTransform = this.style.transform;\n    this.style.oTransform = this.style.transform;\n  }\n/**\n * @param {?} defaultValues\n * @param {?} overrideValues\n * @return {?}\n */\nprivate mergeConfig(defaultValues: ImageViewerConfig, overrideValues: ImageViewerConfig): ImageViewerConfig {\n    let /** @type {?} */ result: ImageViewerConfig = { ...defaultValues };\n    if (overrideValues) {\n      result = { ...defaultValues, ...overrideValues };\n\n      if (overrideValues.btnIcons) {\n        result.btnIcons = { ...defaultValues.btnIcons, ...overrideValues.btnIcons };\n      }\n    }\n    return result;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-image-viewer',\n  template: `\n    <div [ngxToggleFullscreen]=\"fullscreen\" class=\"img-container\" [style.backgroundColor]=\"config.containerBackgroundColor\"\n         (wheel)=\"scrollZoom($event)\" (dragover)=\"onDragOver($event)\">\n      <img [src]=\"src[index]\" [ngStyle]=\"style\" alt=\"Image not found...\" (dragstart)=\"onDragStart($event)\" (load)=\"onLoad()\" (loadstart)=\"onLoadStart()\"/>\n      <!-- Div below will be used to hide the 'ghost' image when dragging -->\n      <div></div>\n      <div class=\"spinner-container\" *ngIf=\"loading\">\n        <div class=\"spinner\"></div>\n      </div>\n\n      <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.rotateCounterClockwise\" (click)=\"rotateCounterClockwise()\">\n        <span [class]=\"config.btnIcons.rotateCounterClockwise\"></span>\n      </button>\n      <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.rotateClockwise\" (click)=\"rotateClockwise()\">\n        <span [class]=\"config.btnIcons.rotateClockwise\"></span>\n      </button>\n\n      <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.zoomOut\" (click)=\"zoomOut()\">\n        <span [class]=\"config.btnIcons.zoomOut\"></span>\n      </button>\n      <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.zoomIn\" (click)=\"zoomIn()\">\n        <span [class]=\"config.btnIcons.zoomIn\"></span>\n      </button>\n\n      <button type=\"button\" [class]=\"config.btnClass\" *ngFor=\"let cBtn of config.customBtns\" (click)=\"fireCustomEvent(cBtn.name, index)\">\n        <span [class]=\"cBtn.icon\"></span>\n      </button>\n\n      <button type=\"button\" id=\"ngx-fs-btn\" [class]=\"config.btnClass\" (click)=\"toggleFullscreen()\" *ngIf=\"config.allowFullscreen\">\n        <span [class]=\"config.btnIcons.fullscreen\"></span>\n      </button>\n\n      <div class=\"nav-button-container\" *ngIf=\"src.length > 1\">\n        <button type=\"button\" [class]=\"config.btnClass\" (click)=\"prevImage()\" [disabled]=\"index === 0\">\n          <span [class]=\"config.btnIcons.prev\"></span>\n        </button>\n        <button type=\"button\" [class]=\"config.btnClass\" (click)=\"nextImage()\" [disabled]=\"index === src.length - 1\">\n          <span [class]=\"config.btnIcons.next\"></span>\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .img-container {\n      height: 100%;\n      width: 100%;\n      overflow: hidden;\n      position: relative; }\n\n    .img-container img {\n      z-index: 2;\n      margin: 0 auto;\n      display: block;\n      max-width: 100%;\n      max-height: 100%; }\n\n    .img-container button {\n      z-index: 99;\n      position: absolute;\n      right: 15px; }\n      .img-container button:not(:disabled) {\n        cursor: pointer; }\n\n    .img-container > button:nth-of-type(1):not(#ngx-fs-btn) {\n      bottom: 15px; }\n\n    .img-container > button:nth-of-type(2):not(#ngx-fs-btn) {\n      bottom: 65px; }\n\n    .img-container > button:nth-of-type(3):not(#ngx-fs-btn) {\n      bottom: 115px; }\n\n    .img-container > button:nth-of-type(4):not(#ngx-fs-btn) {\n      bottom: 165px; }\n\n    .img-container > button:nth-of-type(5):not(#ngx-fs-btn) {\n      bottom: 215px; }\n\n    .img-container > button:nth-of-type(6):not(#ngx-fs-btn) {\n      bottom: 265px; }\n\n    .img-container > button:nth-of-type(7):not(#ngx-fs-btn) {\n      bottom: 315px; }\n\n    #ngx-fs-btn {\n      top: 15px; }\n\n    button.default {\n      height: 40px;\n      width: 40px;\n      border: 1px solid #555;\n      border-radius: 50%;\n      background-color: white;\n      opacity: 0.7;\n      -webkit-transition: opacity 200ms;\n      transition: opacity 200ms; }\n\n    button.default:hover {\n      opacity: 1; }\n\n    button.default:disabled {\n      opacity: 0.25; }\n\n    .nav-button-container > button {\n      position: relative;\n      right: 0;\n      margin: 0 10px; }\n\n    .nav-button-container {\n      text-align: center;\n      position: absolute;\n      z-index: 98;\n      bottom: 10px;\n      left: 0;\n      right: 0; }\n\n    .spinner-container {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 60px;\n      height: 60px;\n      margin: auto;\n      padding: 10px;\n      background-color: rgba(0, 0, 0, 0.4);\n      border-radius: 25%; }\n\n    .spinner {\n      border-width: 7px;\n      border-style: solid;\n      border-color: #ccc;\n      border-bottom-color: #222;\n      border-radius: 50%;\n      height: 100%;\n      width: 100%;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      -webkit-animation: rotation 2s linear infinite;\n      /* Safari 4+ */\n      /* Fx 5+ */\n      /* Opera 12+ */\n      animation: rotation 2s linear infinite;\n      /* IE 10+, Fx 29+ */ }\n\n    @keyframes rotation {\n      from {\n        -webkit-transform: rotate(0deg); }\n      to {\n        -webkit-transform: rotate(359deg); } }\n\n    @-webkit-keyframes rotation {\n      from {\n        -webkit-transform: rotate(0deg); }\n      to {\n        -webkit-transform: rotate(359deg); } }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['config', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'src': [{ type: Input },],\n'index': [{ type: Input },],\n'config': [{ type: Input },],\n'indexChange': [{ type: Output },],\n'configChange': [{ type: Output },],\n'customEvent': [{ type: Output },],\n'nextImage': [{ type: HostListener, args: ['window:keyup.ArrowRight', ['$event'], ] },],\n'prevImage': [{ type: HostListener, args: ['window:keyup.ArrowLeft', ['$event'], ] },],\n'onMouseOver': [{ type: HostListener, args: ['mouseover', ] },],\n'onMouseLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction ImageViewerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nImageViewerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImageViewerComponent.ctorParameters;\n/** @type {?} */\nImageViewerComponent.propDecorators;\n/** @type {?} */\nImageViewerComponent.prototype.src;\n/** @type {?} */\nImageViewerComponent.prototype.index;\n/** @type {?} */\nImageViewerComponent.prototype.config;\n/** @type {?} */\nImageViewerComponent.prototype.indexChange;\n/** @type {?} */\nImageViewerComponent.prototype.configChange;\n/** @type {?} */\nImageViewerComponent.prototype.customEvent;\n/** @type {?} */\nImageViewerComponent.prototype.style;\n/** @type {?} */\nImageViewerComponent.prototype.fullscreen;\n/** @type {?} */\nImageViewerComponent.prototype.loading;\n/** @type {?} */\nImageViewerComponent.prototype.scale;\n/** @type {?} */\nImageViewerComponent.prototype.rotation;\n/** @type {?} */\nImageViewerComponent.prototype.translateX;\n/** @type {?} */\nImageViewerComponent.prototype.translateY;\n/** @type {?} */\nImageViewerComponent.prototype.prevX;\n/** @type {?} */\nImageViewerComponent.prototype.prevY;\n/** @type {?} */\nImageViewerComponent.prototype.hovered;\n/** @type {?} */\nImageViewerComponent.prototype.moduleConfig;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, OnChanges, Input, ElementRef } from '@angular/core';\nimport * as screenfull from 'screenfull';\nexport class ToggleFullscreenDirective implements OnChanges {\n\n    \n    isFullscreen: boolean;\n/**\n * @param {?} el\n */\nconstructor(private el: ElementRef) { }\n/**\n * @return {?}\n */\nngOnChanges() {\n        if (this.isFullscreen && screenfull.enabled) {\n            screenfull.request(this.el.nativeElement);\n        } else if (screenfull.enabled) {\n            screenfull.exit();\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[ngxToggleFullscreen]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isFullscreen': [{ type: Input, args: ['ngxToggleFullscreen', ] },],\n};\n}\n\nfunction ToggleFullscreenDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleFullscreenDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleFullscreenDirective.ctorParameters;\n/** @type {?} */\nToggleFullscreenDirective.propDecorators;\n/** @type {?} */\nToggleFullscreenDirective.prototype.isFullscreen;\n/** @type {?} */\nToggleFullscreenDirective.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { ImageViewerConfig } from './image-viewer-config.model';\nimport { ToggleFullscreenDirective } from './fullscreen.directive';\nexport class ImageViewerModule {\n/**\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(config?: ImageViewerConfig): ModuleWithProviders {\n    return {\n      ngModule: ImageViewerModule,\n      providers: [{provide: 'config', useValue: config}]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ImageViewerComponent,\n    ToggleFullscreenDirective\n  ],\n  exports: [\n    ImageViewerComponent,\n    ToggleFullscreenDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ImageViewerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nImageViewerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImageViewerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ImageViewerComponent,ImageViewerConfig,CustomEvent,ImageViewerModule} from './public_api';\n\nexport {ToggleFullscreenDirective as ɵa} from './src/app/image-viewer/fullscreen.directive';"]}